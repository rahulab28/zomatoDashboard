# -*- coding: utf-8 -*-
"""zomatoDataAnalysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JQtHAJKF3TzUy0nx8ItfwJDQ2W6MyeVX
"""
#pip install pandas streamlit plotly
# reading the data set
import pandas as pd
#df = pd.read_csv(r'C:\Users\rahul\OneDrive\Desktop\zomato\zomato.csv')
df = pd.read_csv(r'zomato.csv')
df.head()
df.columns

# dropping unnecessary columns
df.drop(columns=['Unnamed: 0.1', 'Unnamed: 0'], inplace=True)
df.rename(columns={'rate (out of 5)':'rating','avg cost (two people)':'cost_for_two'},inplace=True)
df.head()

# checking data type and total data available plus info
# total number of col and rows
df.info()

# checking for null values
df.isnull().sum()

#pip install streamlit

# for web app
import streamlit as st
# for data manipulation
import pandas as pd
# for interactive dashboard and visual
import plotly.express as px

# loading data at once using cache for better performance
@st.cache
def load_data():
  data = df
  data.dropna(subset=['rating','cost_for_two'],inplace=True)
  return data

data= load_data()

# title of the dashboard
st.title("Bengaluru Resturant Analysis")
st.sidebar.header("filters")
location_filter = st.sidebar.selectbox("chose location",options=['All'] + sorted(data['local address'].unique()))
cuisine_filter = st.sidebar.multiselect("chose cuisine",options=data['cuisines type'].unique())

filter_data = data
if location_filter != 'All':
  filter_data = filter_data[filter_data['local address'] == location_filter]
if cuisine_filter:
  filter_data = filter_data[filter_data['cuisines type'].isin(cuisine_filter)]

st.header("Restaurant Insights")
col1,col2,col3 = st.columns(3)
with col1:
  st.metric("Total Restaurant",len(filter_data))
with col2:
  st.metric("Average Rating",round(filter_data['rating'].mean(),2))
with col3:
  st.metric("Average Cost",round(filter_data['cost_for_two'].mean(),2))

st.subheader("Cuisine Distribution")
# top 5 cuisine
cuisine_count = filter_data['cuisines type'].value_counts().head(5)
# bar plot the same
fig_cuisine = px.bar(cuisine_count,x=cuisine_count.index,y=cuisine_count.values,labels={'x':'Cuisine','y':'Count'},title="top 5 Cuisine")
st.plotly_chart(fig_cuisine)

fig_rating = px.histogram(filter_data,x='rating',nbins=20,title="Rating Distribution",labels={'rating':'Rating','count':'count'})
st.plotly_chart(fig_rating)

fig_cost = px.histogram(filter_data,x='cost_for_two',nbins=20,title="Cost_2",labels={'cost_for_two':'Cost','count':'count'})
fig_cost_rating = px.scatter(filter_data,x='cost_for_two',y='rating',title="Cost vs Rating",labels={'cost_for_two':'Cost','rating':'Rating'},
                                                                                                    color = 'local address',hover_data=['restaurant name','cuisines type'])

top_rated = filter_data.sort_values(by='rating',ascending=False).head(10)
st.write(top_rated[['restaurant name','rating','cuisines type','cost_for_two','local address']])

location_rating = filter_data.groupby('local address')['rating'].mean().sort_values(ascending=False).head(10)
fig_location = px.bar(location_rating,x=location_rating.index,y = location_rating.values,title="best location for dining")
st.plotly_chart(fig_location)

st.subheader("Online order and table booking insights")
online_order_count = filter_data['online_order'].value_counts(normalize=True)*100
fig_online = px.pie(online_order_count,values=online_order_count.values,names=online_order_count.index,title="Online Order Distribution",hole=0.4)
st.plotly_chart(fig_online)
table_booking_count = filter_data['table booking'].value_counts(normalize=True)*100
fig_table = px.pie(table_booking_count,values=table_booking_count.values,names=table_booking_count.index,title="Table Booking Distribution",hole=0.4)
st.plotly_chart(fig_table)

search_term = st.sidebar.text_input("search by resturant name")
if search_term:
  search_results = filter_data[filter_data['restaurant name'].str.contains(search_term,case=False,na=False)]
  st.write(search_results[['restaurant name','rating','cuisines type','cost_for_two','local address']])

#pip install streamlit pandas plotly

